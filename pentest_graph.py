#!/usr/bin/env python3

import argparse
from core.graph_engine import AttackGraph
from core.parsers import load_nmap_data, load_bloodhound_data

def main():
    parser = argparse.ArgumentParser(description="Pentest-as-Graph CLI")
    parser.add_argument("--nmap", help="Fichier XML Nmap")
    parser.add_argument("--bh", help="Fichier BloodHound JSON")
    parser.add_argument("--ascii", action="store_true", help="Affichage ASCII du graphe")
    parser.add_argument("--neo4j", action="store_true", help="Export vers Neo4j")

    args = parser.parse_args()

    graph = AttackGraph()

    if args.nmap:
        nmap_data = load_nmap_data(args.nmap)
        graph.add_nodes_edges_from_nmap(nmap_data)

    if args.bh:
        bh_data = load_bloodhound_data(args.bh)
        graph.add_nodes_edges_from_bloodhound(bh_data)

    if args.ascii:
        graph.display_ascii()

    if args.neo4j:
        graph.export_to_neo4j()

if __name__ == "__main__":
    main()